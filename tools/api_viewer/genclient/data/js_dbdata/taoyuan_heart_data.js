var taoyuan_heart_data = {
		/**
	 * 0 : id, smallint, 
	 * 1 : level, smallint, 桃源之心等级
	 * 2 : next_level_exp, bigint, 下一级桃源之心需经验
	 * 3 : need_level, smallint, 所需人物等级
	 * 4 : health_addition, int, 生命加成
	 * 5 : attack_addition, int, 攻击加成
	 * 6 : defence_addition, int, 防御加成
	 * 7 : bless_times, int, 每日可祈福次数
	 * 8 : bless_fame, int, 祈福获得声望
	 * 9 : be_blessed_times, int, 每日可纳福次数
	 * 10 : be_blessed_exp, int, 纳福获得桃源之心经验
	 * 11 : per_weight_exp, int, 每权重奖励桃源之心经验
	 * 12 : per_weight_coins, int, 每权重奖励铜钱 
	 */

	Id : 0,
	Level : 1,
	Next_level_exp : 2,
	Need_level : 3,
	Health_addition : 4,
	Attack_addition : 5,
	Defence_addition : 6,
	Bless_times : 7,
	Bless_fame : 8,
	Be_blessed_times : 9,
	Be_blessed_exp : 10,
	Per_weight_exp : 11,
	Per_weight_coins : 12,

	Each: function(cb) {
		for(var i = 0; i < this._list.length; i++) {
			cb(this._list[i]);
		}
	},

	_list: [
		[1 /*[0]*/, 1 /*[1]*/, 1000 /*[2]*/, 0 /*[3]*/, 0 /*[4]*/, 0 /*[5]*/, 0 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 100 /*[10]*/, 10 /*[11]*/, 200 /*[12]*/],
		[2 /*[0]*/, 2 /*[1]*/, 3000 /*[2]*/, 20 /*[3]*/, 400 /*[4]*/, 200 /*[5]*/, 100 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 110 /*[10]*/, 15 /*[11]*/, 200 /*[12]*/],
		[3 /*[0]*/, 3 /*[1]*/, 10000 /*[2]*/, 30 /*[3]*/, 800 /*[4]*/, 400 /*[5]*/, 200 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 120 /*[10]*/, 20 /*[11]*/, 200 /*[12]*/],
		[4 /*[0]*/, 4 /*[1]*/, 25000 /*[2]*/, 40 /*[3]*/, 1200 /*[4]*/, 600 /*[5]*/, 300 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 130 /*[10]*/, 25 /*[11]*/, 200 /*[12]*/],
		[5 /*[0]*/, 5 /*[1]*/, 54000 /*[2]*/, 50 /*[3]*/, 1600 /*[4]*/, 800 /*[5]*/, 400 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 140 /*[10]*/, 30 /*[11]*/, 200 /*[12]*/],
		[6 /*[0]*/, 6 /*[1]*/, 87500 /*[2]*/, 60 /*[3]*/, 2000 /*[4]*/, 1000 /*[5]*/, 500 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 150 /*[10]*/, 35 /*[11]*/, 200 /*[12]*/],
		[7 /*[0]*/, 7 /*[1]*/, 140000 /*[2]*/, 70 /*[3]*/, 2400 /*[4]*/, 1200 /*[5]*/, 600 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 160 /*[10]*/, 40 /*[11]*/, 200 /*[12]*/],
		[8 /*[0]*/, 8 /*[1]*/, 202500 /*[2]*/, 80 /*[3]*/, 2800 /*[4]*/, 1400 /*[5]*/, 700 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 170 /*[10]*/, 45 /*[11]*/, 200 /*[12]*/],
		[9 /*[0]*/, 9 /*[1]*/, 290000 /*[2]*/, 90 /*[3]*/, 3200 /*[4]*/, 1600 /*[5]*/, 800 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 180 /*[10]*/, 50 /*[11]*/, 200 /*[12]*/],
		[10 /*[0]*/, 10 /*[1]*/, 412500 /*[2]*/, 100 /*[3]*/, 3600 /*[4]*/, 1800 /*[5]*/, 900 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 190 /*[10]*/, 55 /*[11]*/, 200 /*[12]*/],
		[11 /*[0]*/, 11 /*[1]*/, 570000 /*[2]*/, 110 /*[3]*/, 4000 /*[4]*/, 2000 /*[5]*/, 1000 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 200 /*[10]*/, 60 /*[11]*/, 200 /*[12]*/],
		[12 /*[0]*/, 12 /*[1]*/, 780000 /*[2]*/, 120 /*[3]*/, 4400 /*[4]*/, 2200 /*[5]*/, 1100 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 210 /*[10]*/, 65 /*[11]*/, 200 /*[12]*/],
		[13 /*[0]*/, 13 /*[1]*/, 1050000 /*[2]*/, 130 /*[3]*/, 4800 /*[4]*/, 2400 /*[5]*/, 1200 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 220 /*[10]*/, 70 /*[11]*/, 200 /*[12]*/],
		[14 /*[0]*/, 14 /*[1]*/, 1350000 /*[2]*/, 140 /*[3]*/, 5200 /*[4]*/, 2600 /*[5]*/, 1300 /*[6]*/, 5 /*[7]*/, 20 /*[8]*/, 5 /*[9]*/, 230 /*[10]*/, 75 /*[11]*/, 200 /*[12]*/]
	],
};
